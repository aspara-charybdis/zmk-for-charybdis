#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define JP_ZKHK  GRAVE        // Zenkaku ↔ Hankaku ↔ Kanji (半角 ↔ 全角 ↔ 漢字)
#define JP_MINUS MINUS        // -
#define JP_CARET EQUAL        // ^
#define JP_YEN   INT3         // ¥
#define JP_AT    LBKT         // @
#define JP_LBKT  RBKT         // [
#define JP_EISU  CAPS         // Eisū (英数)
#define JP_SEMI  SEMI         // ;
#define JP_COLON SQT          // :
#define JP_RBKT  NUHS         // ]
#define JP_COMMA COMMA        // ,
#define JP_DOT   DOT          // .
#define JP_SLASH SLASH        // /
#define JP_BSLH  INT1         // (backslash)
#define JP_MHEN  INT5         // Muhenkan (無変換)
#define JP_HENK  INT4         // Henkan (変換)
#define JP_KANA  INT2         // Katakana ↔ Hiragana ↔ Rōmaji (カタカナ ↔ ひらがな ↔ ローマ字)
#define JP_EXCL  LS(N1)       // !
#define JP_DQT   LS(N2)       // "
#define JP_HASH  LS(N3)       // #
#define JP_DLLR  LS(N4)       // $
#define JP_PRCNT LS(N5)       // %
#define JP_AMPS  LS(N6)       // &
#define JP_SQT   LS(N7)       // '
#define JP_LPAR  LS(N8)       // (
#define JP_RPAR  LS(N9)       // )
#define JP_EQUAL LS(JP_MINUS) // =
#define JP_TILDE LS(JP_CARET) // ~
#define JP_PIPE  LS(JP_YEN)   // |
#define JP_GRAVE LS(JP_AT)    // `
#define JP_LBRC  LS(JP_LBKT)  // {
#define JP_CAPS  LS(JP_EISU)  // Caps Lock
#define JP_PLUS  LS(JP_SEMI)  // +
#define JP_ASTRK LS(JP_COLON) // *
#define JP_RBRC  LS(JP_RBKT)  // }
#define JP_LT    LS(JP_COMMA) // <
#define JP_RT    LS(JP_DOT)   // >
#define JP_QMARK LS(JP_SLASH) // ?
#define JP_UNDER LS(JP_BSLH)  // _
#define ZMK_POINTING_DEFAULT_MOVE_VAL 9000  // default: 600

&lt {
    tapping-term-ms = <200>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

/ {
    combos {
        compatible = "zmk,combos";

        escc {
            bindings = <&kp ESC>;
            key-positions = <17 18>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp ESC         &kp N1  &kp N2  &kp N3               &kp N4        &kp N5          &kp N6          &kp N7       &kp N8     &kp N9   &kp N0     &kp BSPC
&kp ESCAPE      &kp Q   &kp W   &kp E                &kp R         &kp T           &kp Y           &kp U        &kp I      &kp O    &kp P      &kp DEL
&kp TAB         &kp A   &kp S   &kp D                &kp F         &kp G           &kp H           &kp J        &kp K      &kp L    &kp SEMI   &kp COLON
&kp LEFT_SHIFT  &kp Z   &kp X   &kp C                &kp V         &kp B           &kp N           &kp M        &kp COMMA  &kp DOT  &kp SLASH  &mt RIGHT_ALT LEFT_WIN
                                &mt LCTRL LC(SPACE)  &lt 3 SPACE   &kp INT_KANA    &kp BACKSPACE   &lt 1 ENTER
                                                     &kp LEFT_ALT  &kp SPACE       &kp DOWN_ARROW
            >;

            trackball-bindings = <&tmv_coarse>;
        };

        layer_1 {
            bindings = <
&kp TILDE   &kp EXCLAMATION  &kp HASH      &kp DOLLAR    &kp DOLLAR    &kp PERCENT             &kp CARET              &kp AMPERSAND             &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE
&kp ESCAPE  &kp NUMBER_1     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp LS(LBKT)            &kp LS(RBKT)           &kp EXCLAMATION           &kp LS(NUMBER_6)  &kp GRAVE             &kp DOLLAR             &kp DEL
&kp TAB     &kp NUMBER_5     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp LS(N8)              &kp LS(NUMBER_9)       &kp MINUS                 &kp TILDE         &kp HASH              &kp COLON              &kp PAGE_UP
&kp LSHFT   &kp N0           &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp LS(LEFT_BRACKET)    &kp LS(RIGHT_BRACKET)  &kp LS(NON_US_BACKSLASH)  &kp LCTRL         &kp GRAVE             &kp QUESTION           &kp PAGE_DOWN
                                           &kp LEFT_WIN  &kp SPACE     &trans                  &kp BACKSPACE          &kp ENTER
                                                         &none         &none                   &trans
            >;
        };

        layer_2 {
            bindings = <
&kp F12           &kp F1      &kp F2      &kp F3         &kp F4         &kp F5          &kp F6        &kp F7         &kp F8    &kp F9     &kp F10  &kp F11
&kp LS(GRAVE)     &kp LS(N1)  &kp LS(N2)  &kp LS(N3)     &kp LS(N4)     &kp LS(LBKT)    &kp LS(RBKT)  &none          &trans    &none      &none    &trans
&kp LEFT_CONTROL  &kp LS(N5)  &kp LS(N6)  &kp LS(N7)     &kp LS(N8)     &none           &kp LS(BSLH)  &trans         &kp UP    &trans     &trans   &trans
&kp LEFT_SHIFT    &kp LS(N9)  &kp LS(N0)  &kp LS(MINUS)  &kp LS(EQUAL)  &none           &none         &kp LEFT       &kp DOWN  &kp RIGHT  &none    &trans
                                          &kp LEFT_ALT   &kp SPACE      &kp ENTER       &trans        &kp BACKSPACE
                                                         &trans         &trans          &none
            >;
        };

        Mouse {
            bindings = <
&none        &none         &none   &none   &none      &none              &none          &none      &none      &none         &none           &none
&none        &bt BT_SEL 0  &kp F7  &kp F8  &kp F9     &kp F10            &kp F11        &kp F12    &mkp MB5   &bt BT_SEL 1  &bt BT_SEL 0    &none
&none        &trans        &kp F4  &kp F5  &kp F6     &mmv MOVE_RIGHT    &kp UP         &mkp LCLK  &mkp MCLK  &mkp RCLK     &mmv MOVE_UP    &none
&bootloader  &trans        &kt F1  &kp F2  &kp F3     &mo 5              &kp DOWN       &kt LEFT   &kt RIGHT  &mkp RCLK     &mmv MOVE_DOWN  &bootloader
                                   &mo 5   &mkp LCLK  &mkp RCLK          &kp BACKSPACE  &kt ENTER
                                           &none      &trans             &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans     &trans     &trans     &trans       &trans     &trans     &trans     &trans     &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans       &trans     &trans     &trans     &trans     &trans  &trans
&trans  &trans  &trans     &mkp MCLK  &trans     &trans       &trans     &trans     &mkp MCLK  &trans     &trans  &trans
&trans  &trans  &mkp RCLK  &trans     &mkp LCLK  &trans       &trans     &mkp LCLK  &trans     &mkp RCLK  &trans  &trans
                           &trans     &mkp LCLK  &mkp RCLK    &mkp RCLK  &mkp LCLK
                                      &trans     &trans       &trans
            >;

            trackball-bindings = <&tsl>;//滚轮层
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans     &trans     &trans     &trans       &trans     &trans     &trans     &trans     &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans       &trans     &trans     &trans     &trans     &trans  &trans
&trans  &trans  &trans     &mkp MCLK  &trans     &trans       &trans     &trans     &mkp MCLK  &trans     &trans  &trans
&trans  &trans  &mkp RCLK  &trans     &mkp LCLK  &trans       &trans     &mkp LCLK  &trans     &mkp RCLK  &trans  &trans
                           &trans     &mkp LCLK  &mkp RCLK    &mkp RCLK  &mkp LCLK
                                      &trans     &trans       &trans
            >;

            trackball-bindings = <&tmv_fine>;//精准指针层
        };
    };
};
